#!/bin/sh
# Copyright (C) 2011, 2012 O.S. Systems Software LTDA.
# Licensed on MIT

udev_udevadm="/sbin/udevadm"

udev_shutdown_hook_handler() {
	status=$1
	module=$2
	if [ "$status" = "pre" ] && [ "$module" = "finish" ]; then
		killall `basename $_UDEV_DAEMON` 2>/dev/null
	fi
}

udev_daemon() {
	OPTIONS="/sbin/udev/udevd /sbin/udevd /lib/udev/udevd /lib/systemd/systemd-udevd"

	for o in $OPTIONS; do
		if [ -x "$o" ]; then
			echo $o
			return 0
		fi
	done

	return 1
}

_UDEV_DAEMON=`udev_daemon`

udev_enabled() {
	if [ -z "$_UDEV_DAEMON" ]; then
		msg "WARNING: Cannot find the udev daemon; daemon will not be started in initramfs."
		return 1
	fi

	return 0
}

INITLOG=/initramfs.log
MAX_WAIT=15

fs_check() {
    dev=$1
    let cnt=1
    while [ ! -e $dev ]; do
        if [ $cnt -gt $MAX_WAIT ]; then
            echo "udev: Waited for $MAX_WAIT seconds for $dev to appear. Giving up!!" | tee -a $INITLOG
            echo "udev: Continuing without running e2fsck for $dev" | tee -a $INITLOG
            if [ $fail2shell ]; then
                echo "udev: Dropping to shell to allow further examination"
                /bin/sh
            fi
            break
        fi
        echo "udev: Waiting for $dev to appear ..." | tee -a $INITLOG
        sleep 1
        let cnt+=1
    done
    # Force check and automatically fix filesystem errors:
    if [ -e $dev ]; then
        echo "Issuing: e2fsck -y -f -C0 $dev" >> $INITLOG
        e2fsck -y -f -C0 $dev | tee -a $INITLOG
        ret=$?
        if [ $ret != 0 ]; then
            echo "e2fsck returned $ret"
        fi
        echo "e2fsck returned $ret" >> $INITLOG
    fi
}

udev_run() {
	add_module_pre_hook "udev_shutdown_hook_handler"

	mkdir -p /run
    mkdir -p /var/run
    touch $INITLOG

    # Check for FS errors:
    ln -sf /proc/mounts /etc/mtab

    # /dev/sda doesn't appear right away:
    let cnt=1
    while [ ! -e /dev/sda ] && [ ! -e /dev/mmcblk0 ]; do
        if [ $cnt -gt $MAX_WAIT ]; then
            echo "udev: Waited for $MAX_WAIT seconds for /dev/sda or /dev/mmcblk0 to appear. Giving up!!"
            echo "udev: Cannot e2fsck APP and BOOT partitions without it"
            echo "udev: This unit will probably crash in a few seconds, unless fail2shell is set"
            if [ $fail2shell ]; then
                echo "udev: Dropping to shell to allow further examination"
                /bin/sh
            fi
            break
        fi
        echo "udev: Waiting for /dev/sda or for /dev/mmcblk0 ..." >> $INITLOG
        sleep 1
        let cnt+=1
    done

    if [ -e /dev/sda ]; then
        fs_check /dev/sda1
        fs_check /dev/sda2
    fi

    if [ -e /dev/mmcblk0 ]; then
        fs_check /dev/mmcblk0p1
        fs_check /dev/mmcblk0p2
        # create the mount points for fstab
        if [ ! -d /media/sda1 ]; then
            mkdir -p /media/sda1
        fi
        if [ ! -d /media/sda2 ]; then
            mkdir -p /media/sda2
        fi
    fi

    ${_UDEV_DAEMON} --daemon > /dev/null
    if [ $? != 0 ]; then
        fatal "ERROR: udevd --daemon failed"
    fi

    ${udev_udevadm} trigger --action=add
    if [ $? != 0 ]; then
        fatal "ERROR: udevadm trigger failed"
    fi
    ${udev_udevadm} settle
    if [ $? != 0 ]; then
        fatal "ERROR: udevadm settle failed"
    fi

    pkill udevd
}
